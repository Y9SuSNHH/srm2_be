#!/usr/bin/env php
<?php

use App\Console\Commands\VueHelperEndpoint;
use App\Console\Commands\VueHelperEnum;
use App\Console\Commands\LearningProcessCommand;
use App\Console\Commands\TransactionCommand;
use Illuminate\Console\Application as Artisan;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

/*
|--------------------------------------------------------------------------
| Create The Application
|--------------------------------------------------------------------------
|
| First we need to get an application instance. This creates an instance
| of the application / container and bootstraps the application so it
| is ready to receive HTTP / Console requests from the environment.
|
*/

$app = require __DIR__.'/bootstrap/terminal.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(
    'Illuminate\Contracts\Console\Kernel'
);

Artisan::starting(function ($artisan) {
    $artisan->resolveCommands([
        \App\Console\Commands\BacklogWork::class,
        VueHelperEndpoint::class,
        VueHelperEnum::class,
        LearningProcessCommand::class,
        TransactionCommand::class,
        \App\Console\Commands\ServeCommand::class,
        \App\Console\Commands\SessionTimeoutClear::class,
    ]);
});

exit($kernel->handle(new ArgvInput, new ConsoleOutput));
